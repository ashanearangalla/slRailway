// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using railwayBookingApp.DAL;

#nullable disable

namespace railwayBookingApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("railwayBookingApp.Models.Payment", b =>
                {
                    b.Property<int>("paymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paymentID"));

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("paymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("paymentID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Schedule", b =>
                {
                    b.Property<int>("scheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleID"));

                    b.Property<DateOnly>("arrivalDate")
                        .HasColumnType("date");

                    b.Property<int>("avaSeats")
                        .HasColumnType("int");

                    b.Property<int>("bookedSeats")
                        .HasColumnType("int");

                    b.Property<DateOnly>("departureDate")
                        .HasColumnType("date");

                    b.Property<int>("noOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("trainID")
                        .HasColumnType("int");

                    b.HasKey("scheduleID");

                    b.HasIndex("trainID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Seat", b =>
                {
                    b.Property<int>("seatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("seatID"));

                    b.Property<int>("seatNo")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ticketID")
                        .HasColumnType("int");

                    b.HasKey("seatID");

                    b.HasIndex("ticketID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Station", b =>
                {
                    b.Property<int>("stationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stationID"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stationID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Ticket", b =>
                {
                    b.Property<int>("ticketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ticketID"));

                    b.Property<string>("board")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("dropping")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paymentID")
                        .HasColumnType("int");

                    b.Property<int>("scheduleID")
                        .HasColumnType("int");

                    b.Property<int>("seatCount")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("ticketID");

                    b.HasIndex("paymentID");

                    b.HasIndex("scheduleID");

                    b.HasIndex("userID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Train", b =>
                {
                    b.Property<int>("trainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("trainID"));

                    b.Property<TimeOnly>("arrivalTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("departureTime")
                        .HasColumnType("time");

                    b.Property<string>("destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("trainID");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("railwayBookingApp.Models.TrainStation", b =>
                {
                    b.Property<int>("trainID")
                        .HasColumnType("int");

                    b.Property<int>("stationID")
                        .HasColumnType("int");

                    b.HasKey("trainID", "stationID");

                    b.HasIndex("stationID");

                    b.ToTable("TrainStations");
                });

            modelBuilder.Entity("railwayBookingApp.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("contactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Schedule", b =>
                {
                    b.HasOne("railwayBookingApp.Models.Train", "Train")
                        .WithMany("Schedules")
                        .HasForeignKey("trainID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Seat", b =>
                {
                    b.HasOne("railwayBookingApp.Models.Ticket", "Ticket")
                        .WithMany("Seats")
                        .HasForeignKey("ticketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Ticket", b =>
                {
                    b.HasOne("railwayBookingApp.Models.Payment", "Payment")
                        .WithMany("Tickets")
                        .HasForeignKey("paymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("railwayBookingApp.Models.Schedule", "Schedule")
                        .WithMany("Tickets")
                        .HasForeignKey("scheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("railwayBookingApp.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Schedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("railwayBookingApp.Models.TrainStation", b =>
                {
                    b.HasOne("railwayBookingApp.Models.Station", "Station")
                        .WithMany("TrainStations")
                        .HasForeignKey("stationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("railwayBookingApp.Models.Train", "Train")
                        .WithMany("TrainStations")
                        .HasForeignKey("trainID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Payment", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Schedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Station", b =>
                {
                    b.Navigation("TrainStations");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Ticket", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("railwayBookingApp.Models.Train", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("TrainStations");
                });

            modelBuilder.Entity("railwayBookingApp.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
